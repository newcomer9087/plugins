name: OpenOSRS - CI (Push)

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Testing plugins
        run: ./gradlew test --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  checkstyleMain:
    runs-on: ubuntu-latest
    name: Checkstyle main

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Checking plugins code conventions (Main)
        run: ./gradlew checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  checkstyleTest:
    runs-on: ubuntu-latest
    name: Checkstyle test

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Checking plugins code conventions (Test)
        run: ./gradlew checkstyleTest --console=plain
        working-directory: OpenOSRS-plugins

  update_draft_release:
    name: Draft release
    runs-on: ubuntu-latest

    steps:
      - uses: toolmantim/release-drafter@v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bootstrap:
    runs-on: ubuntu-latest
    needs: [build, test, checkstyleMain, checkstyleTest]
    name: Bootstrap

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

      - name: Bootstrapping plugins
        run: ./gradlew bootstrapPlugins --stacktrace --console=plain
        working-directory: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/plugin-hosting
          ref: master
          path: OpenOSRS-plugins-hosting
          token: ${{ secrets.Owain }}

      - name: Copy bootstrap
        run: cp -af /home/runner/work/plugins/plugins/OpenOSRS-plugins/build/bootstrap/. /home/runner/work/plugins/plugins/OpenOSRS-plugins-hosting
        working-directory: OpenOSRS-plugins-hosting

      - name: Commit bootstrap
        run: |
          git add $(git ls-files -o --exclude-standard) plugins.json
          git diff-index --quiet HEAD \
          || git -c user.name="GitHub" -c user.email="noreply@github.com" commit \
            --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>" \
            -m "Automatic plugin bootstrap"
        working-directory: OpenOSRS-plugins-hosting

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.Owain }}
          directory: /home/runner/work/plugins/plugins/OpenOSRS-plugins-hosting
          repository: open-osrs/plugin-hosting
