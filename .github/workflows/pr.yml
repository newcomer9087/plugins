name: OpenOSRS - CI (PR)

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  pr-lint:
    name: PR title
    runs-on: ubuntu-latest

    steps:
      - name: PR title lint
        if: github.event_name == 'pull_request'
        uses: MorrisonCole/pr-lint-action@v1.4.1
        with:
          title-regex: '^([\w-/]+): \w+'
          on-failed-regex-fail-action: false
          on-failed-regex-request-changes: false
          on-failed-regex-create-review: true
          on-failed-regex-comment: "Your PR title should match the following regex: `%regex%`!"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  validate:
    name: Validate gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: gradle/wrapper-validation-action@v1.0.3

  build:
    name: Build
    needs: [pr-lint, validate]
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  test:
    name: Test
    needs: [pr-lint, validate]
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Testing plugins
        run: ./gradlew test --stacktrace -x checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  checkstyleMain:
    name: Checkstyle main
    needs: [pr-lint, validate]
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Checking plugins code conventions (Main)
        run: ./gradlew checkstyleMain --console=plain
        working-directory: OpenOSRS-plugins

  checkstyleTest:
    name: Checkstyle test
    needs: [pr-lint, validate]
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - uses: actions/checkout@v2.3.4
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Upload client artifacts to local maven
        run: ./gradlew :http-api:publishToMavenLocal :runelite-api:publishToMavenLocal :runelite-client:publishToMavenLocal --console=plain
        working-directory: OpenOSRS

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS-plugins

      - name: Checking plugins code conventions (Test)
        run: ./gradlew checkstyleTest --console=plain
        working-directory: OpenOSRS-plugins

  bump:
    name: Check version numbers
    needs: [pr-lint, validate]
    runs-on: ubuntu-latest

    steps:
      - name: Extract actor repo
        shell: bash
        run: echo "##[set-output name=repo;]$(echo $(jq --raw-output .pull_request.head.repo.full_name "$GITHUB_EVENT_PATH"))"
        id: extract_actor_repo

      - name: Extract actor repo branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo $(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH"))"
        id: extract_actor_repo_branch

      - id: changedFiles
        name: Changed files exporter
        uses: futuratrepadeira/changed-files@v3.3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.4
        with:
          path: OpenOSRS-plugins

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: OpenOSRS-plugins

      - name: Bump version numbers
        id: bumpNewChanged
        if: steps.changedFiles.outputs.files_created != '' && steps.changedFiles.outputs.files_updated != ''
        run: |
          ./gradlew bumpVersion --newFiles="${{ steps.changedFiles.outputs.files_created }}" --changedFiles="${{ steps.changedFiles.outputs.files_updated }}" --console=plain
        working-directory: OpenOSRS-plugins

      - name: Bump version numbers
        id: bumpChanged
        if: steps.changedFiles.outputs.files_created == '' && steps.changedFiles.outputs.files_updated != ''
        run: |
          ./gradlew bumpVersion --changedFiles="${{ steps.changedFiles.outputs.files_updated }}" --console=plain
        working-directory: OpenOSRS-plugins

      - name: Bump version numbers
        id: bumpNew
        if: steps.changedFiles.outputs.files_created != '' && steps.changedFiles.outputs.files_updated == ''
        run: |
          ./gradlew bumpVersion --newFiles="${{ steps.changedFiles.outputs.files_created }}" --console=plain
        working-directory: OpenOSRS-plugins

      - name: Detect changes
        id: detectChanges
        run: |
          git update-index --skip-worktree gradlew

          if ! git diff-index --quiet HEAD --; then
              git diff-index --name-only HEAD --

              exit 1
          fi
        working-directory: OpenOSRS-plugins

  approve:
    name: Approve
    needs: [build, test, checkstyleMain, checkstyleTest, bump]
    runs-on: ubuntu-latest

    steps:
      - name: Approve pull request
        if: github.event_name == 'pull_request' && github.actor == 'OpenOSRS'
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: ${{ secrets.Owain }}
